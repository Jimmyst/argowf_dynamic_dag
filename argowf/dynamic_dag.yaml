apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: dynamic_dag
  namespace: argo
spec:
  entrypoint: dynamic-dag
  arguments:
    parameters:
      - name: start-dt
        value: "2023-12-20"
      - name: end-dt
        value: "2024-01-12"
  templates:
  - name: dynamic-dag
    inputs:
        parameters:
          - name: start-dt
          - name: end-dt
    dag:
      tasks:
      - name: date-generator
        template: date-generator
        arguments:
          parameters:
            - name: start-dt
              value: "{{inputs.parameters.start-dt}}"
            - name: end-dt
              value: "{{inputs.parameters.end-dt}}"
      - name: data-processing
        depends: "date-generator"
        template: whalesay
        arguments:
          parameters:
          - {name: message, value: "{{item.partition}}"}
        withParam: "{{tasks.date-generator.outputs.parameters.generated_dates}}"
      - name: processing-done
        depends: "data-processing"
        template: whalesay
        arguments:
          parameters:
          - {name: message, value: done!}

  - name: date-generator
    inputs:
      parameters:
        - name: start-dt
        - name: end-dt
    script:
      image: python:alpine3.6
      command: [ python ]
      source: |
        import json
        import sys
        from datetime import datetime,timedelta

        startDt = datetime.strptime("{{inputs.parameters.start-dt}}","%Y-%m-%d")
        endDt = datetime.strptime("{{inputs.parameters.end-dt}}","%Y-%m-%d") 
        delta = (endDt - startDt).days
        out_file = open("generated_dates.json", "w") 
        json.dump([{"partition": (startDt + timedelta(days=i)).strftime('%Y-%m-%d')} for i in range(delta+1)],out_file)     
        out_file.close() 
    outputs:
      parameters:
        - name: generated_dates
          valueFrom:
            default: "set date"
            path: generated_dates.json
          globalName: generated_dates 

  - name: whalesay
    inputs:
      parameters:
      - name: message
    container:
      image: docker/whalesay:latest
      command: [cowsay]
      args: ["{{inputs.parameters.message}}"]